#tag ClassProtected Class zlibInflater	#tag Method, Flags = &h0		Sub Constructor(theSource as Readable, theTarget as Writeable)		  soft declare function inflateInit_ lib zlibPath (ByRef strm as z_stream, version as CString, stream_size as Integer) as Integer		  		  dim err as Integer = inflateInit_(stream, zlibModule.Version, z_stream.Size)		  		  me.Source = theSource		  me.Target = theTarget		  const defaultBufferSize = 262144		  me.OutputBuffer = new MemoryBlock(defaultBufferSize)		  me.stream.next_out = outputBuffer		  me.stream.avail_out = outputBuffer.Size		  		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Destructor()		  soft declare function inflateEnd lib zlibPath (ByRef strm as z_stream) as Integer		  		  dim err as Integer = inflateEnd(stream)		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function Inflate() As Boolean		  do		    dim m as MemoryBlock = source.Read(me.ReadBlockSize)		    me.stream.next_in = m		    me.stream.avail_in = m.Size		    do		      soft declare function inflate lib zlibPath (ByRef strm as z_stream, flush as Integer) as Integer		      		      dim result as Integer = inflate(stream, 0)		      If result = 1 then		        me.Target.Write OutputBuffer.StringValue(0, OutputBuffer.Size - me.stream.avail_out)		        return false		        		      elseIf result = Z_OK then		        if me.stream.avail_out = 0 then		          me.Target.Write outputBuffer		          me.stream.next_out = outputBuffer		          me.stream.avail_out = outputBuffer.Size		        end if		        		      elseIf result = Z_BUF_ERROR then		        //no more input, but decompression is not yet complete		        exit		        		      else		        return false //or should I raise an exception?		      end if		    loop		    		  loop		  		End Function	#tag EndMethod	#tag ComputedProperty, Flags = &h0		#tag Getter			Get			  return me.OutputBuffer.Size			End Get		#tag EndGetter		#tag Setter			Set			  if value < 1 then			    return			  end if			  me.OutputBuffer.Size = value			End Set		#tag EndSetter		BufferSize As Integer	#tag EndComputedProperty	#tag Property, Flags = &h21		Private OutputBuffer As MemoryBlock	#tag EndProperty	#tag ComputedProperty, Flags = &h0		#tag Getter			Get			  return me.stream.total_out			End Get		#tag EndGetter		OutputLength As Integer	#tag EndComputedProperty	#tag Property, Flags = &h0		ReadBlockSize As Integer = 32768	#tag EndProperty	#tag Property, Flags = &h21		Private Source As Readable	#tag EndProperty	#tag Property, Flags = &h21		Private stream As z_stream	#tag EndProperty	#tag Property, Flags = &h21		Private Target As Writeable	#tag EndProperty	#tag Constant, Name = zlibPath, Type = String, Dynamic = False, Default = \"", Scope = Private		#Tag Instance, Platform = Mac OS, Language = Default, Definition  = \"/usr/lib/libz.dylib"		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"ZLIB1.DLL"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"/usr/lib/libz.so.1"	#tag EndConstant	#tag Constant, Name = Z_BUF_ERROR, Type = Double, Dynamic = False, Default = \"-5", Scope = Private	#tag EndConstant	#tag Constant, Name = Z_OK, Type = Double, Dynamic = False, Default = \"0", Scope = Private	#tag EndConstant	#tag Constant, Name = Z_STREAM_END, Type = Double, Dynamic = False, Default = \"1", Scope = Private	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="BufferSize"			Group="Behavior"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="OutputLength"			Group="Behavior"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="ReadBlockSize"			Group="Behavior"			InitialValue="32768"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass